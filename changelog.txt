-added schema1 and schema2 fucntions 
-added quant_norm (quantifies and normalizes a vector of double)* takes 2^n slices between the maximum and minimum value of the elements in the vector;
	then determines for every element in which slice it's located
-must be implemented a conversion to gray code and some reed muller stuff
	* see dec2bin and bin2gray for the gray code
-must be implemented a key to rand bytes
	* a trivial prototype for such function would be like so: 
	we intend to create a matrix of m by n pseudorand bytes
	step 1 we take the key and expand it via expandkey function to size m (or n)
	step 2 we generate the corresponding row of random nubmers by seeding with the current key byte
	step 3 profit
	
	EXAMPLE m=6, n=3, key = "1234"
	beta= [ 0 0 0 
		0 0 0
		0 0 0
		0 0 0
		0 0 0
		0 0 0
			]
	iteration 1 key[1] = "1" = 0x31
	seed(0x31)
	generate_rand(3)
	12 43 33
	beta = [ 12 43 33
		0
		0
		...]
	iteration 2 key[2] = "2" = 0x32
	seed(0x32)
	generate_rand(3)
	15 32 1
	beta = [12 43 33
		15 32 1
		..
		]
	etc